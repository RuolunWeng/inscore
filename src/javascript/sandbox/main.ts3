
//<reference path="OSCRegexp.ts"/>

interface checkfunction			{ (n: any): boolean; }   
function test(f: string, check : checkfunction): void {
		let result = eval(f);
		if (check(result))
			console.log ("OK     " + f);
		else 
			console.log ("ERREUR " + f + " => " + result);
	}

function _checkNum(n: number) : checkfunction { return (m) => (n === m); }
test("2+2", _checkNum(5));



/*
console.log ("Tests regexp");
let pattern = "a*";
let re = new OSCRegexp(pattern);
let str = "abcde";
console.log (pattern + " -> " + str + " : " + re.match(str));
str = "xabcde";
console.log (pattern + " -> " + str + " : " + re.match(str));
str = "xyz";
console.log (pattern + " -> " + str + " : " + re.match(str));
str = "Abcde";
console.log (pattern + " -> " + str + " : " + re.match(str));
console.log ("---------------------");

pattern = "*a";
re = new OSCRegexp(pattern);
str = "abcde";
console.log (pattern + " -> " + str + " : " + re.match(str));
str = "xabcde";
console.log (pattern + " -> " + str + " : " + re.match(str));
str = "xya";
console.log (pattern + " -> " + str + " : " + re.match(str));
str = "Abcda";
console.log (pattern + " -> " + str + " : " + re.match(str));
console.log ("---------------------");

pattern = "?[2-4]*";
re = new OSCRegexp(pattern);
str = "1bcde";
console.log (pattern + " -> " + str + " : " + re.match(str));
str = "x3bcde";
console.log (pattern + " -> " + str + " : " + re.match(str));
str = "scene";
console.log (pattern + " -> " + str + " : " + re.match(str));
str = "12cda";
console.log (pattern + " -> " + str + " : " + re.match(str));
console.log ("---------------------");

pattern = "?{bc,ce}*";
re = new OSCRegexp(pattern);
str = "abcde";
console.log (pattern + " -> " + str + " : " + re.match(str));
str = "xabcde";
console.log (pattern + " -> " + str + " : " + re.match(str));
str = "scene";
console.log (pattern + " -> " + str + " : " + re.match(str));
str = "Axcda";
console.log (pattern + " -> " + str + " : " + re.match(str));
console.log ("---------------------");

*/