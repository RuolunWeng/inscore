# on vide la scene
/ITL/scene/* del;

# on crée les images
/ITL/scene/voix1 set img "voix1.tiff";
/ITL/scene/voix2 set img "voix2.tiff";
/ITL/scene/voix3 set img "voix3.tiff";

# on spécifie le mapping pour chaque image
/ITL/scene/voix1 mapf "voix1.map";
/ITL/scene/voix2 mapf "voix2.map";
/ITL/scene/voix3 mapf "voix3.map";


(*
% en option: un curseur sous forme de barre
/ITL/scene/cursor1 set "rect" 0.01 0.5 
/ITL/scene/cursor2 set "rect" 0.01 0.5 
/ITL/scene/cursor3 set "rect" 0.01 0.5 
*)

# on crée 3 curseurs avec leur largeur et hauteur
/ITL/scene/cursor1 set ellipse 0.1 0.1;
/ITL/scene/cursor2 set ellipse 0.1 0.1;
/ITL/scene/cursor3 set ellipse 0.1 0.1;

# on change la courleur de tous les curseurs (en RGBA)
/ITL/scene/cursor* color 0 0 255 180;

# on change le zoom de toutes les voix
/ITL/scene/voix* scale 1.0;

# on met l'origine de toutes les voix à gauche
/ITL/scene/voix* xorigin -1.0;

# on aligne toutes les voix en x 
/ITL/scene/voix* x -1.8;

# et la voix 2 est décalée
/ITL/scene/voix2 x -1.5;

# on répartit les voix verticalement
/ITL/scene/voix1 y -0.3;
/ITL/scene/voix3 y 0.3;

# on décale le curseur 2 d'une mesure
/ITL/scene/cursor2 date -1 1;

# on agrandit un peu tous les curseurs
/ITL/scene/cursor* scale 3.0;

# on synchronise les curseurs sur chaque voix
/ITL/scene/sync cursor1 voix1;
/ITL/scene/sync cursor2 voix2;
/ITL/scene/sync cursor3 voix3;

#-------------------------------------------------------
# on organise les changements de page
#-------------------------------------------------------
# le principe: associer un message à un événement
# quand l'événement se produit, le message est émit
#
# exemple:
# ..destination...   watch   événement  zone temporelle  ... la suite c'est le message associé
#                                       2 rationels en temps musical
# /ITL/scene/cursor1 watch  "timeEnter" 8 1 16 1  "/ITL/scene/voix1" "set" "img" "voix2.tiff"
#
/ITL/scene/cursor1 watch timeEnter 0 1 8 1 (
	/ITL/scene/voix1 set img "voix1.tiff" ,
	/ITL/scene/voix1 mapf "voix1.map" );

/ITL/scene/cursor2 watch timeEnter 0 1 8 1 (
	/ITL/scene/voix2 set img "voix2.tiff" ,
	/ITL/scene/voix2 mapf "voix2.map" );

/ITL/scene/cursor3 watch timeEnter 0 1 8 1 (
	/ITL/scene/voix3 set img "voix3.tiff" ,
	/ITL/scene/voix3 mapf "voix3.map" );

/ITL/scene/cursor1 watch timeEnter 8 1 16 1 (
	/ITL/scene/voix1 set img "voix2.tiff" ,
	/ITL/scene/voix1 mapf "voix2.map" );

/ITL/scene/cursor2 watch timeEnter 8 1 16 1 (
	/ITL/scene/voix2 set img "voix3.tiff" ,
	/ITL/scene/voix2 mapf "voix3.map" );

/ITL/scene/cursor3 watch timeEnter 8 1 16 1 (
	/ITL/scene/voix3 set img "voix1.tiff" ,
	/ITL/scene/voix3 mapf "voix1-8.map" );

/ITL/scene/cursor1 watch timeEnter 16 1 24 1 (
	/ITL/scene/voix1 set img "voix3.tiff" );

/ITL/scene/cursor2 watch timeEnter 16 1 24 1 (
	/ITL/scene/voix2 set img "voix1.tiff"  ,
	/ITL/scene/voix2 mapf "voix1.map" );

/ITL/scene/cursor3 watch timeEnter 16 1 24 1 (
	/ITL/scene/voix3 set img "voix2.tiff" ,
	/ITL/scene/voix3 mapf "voix2.map" );
	
#-------------------------------------------------------
# pour piloter le système depuis max
#-------------------------------------------------------
# il faut envoyer des messages clock aux curseurs pour les faire avancer:
# /ITL/scene/cursor* clock
#
# il faut déplacer les curseurs dans le temps pour accéder à la transposition correspondante
# l'exemple suivant demande la transposition de 2 tons pour la voix 2
# /ITL/scene/cursor2 date 16 1 
#