

<?javascript
	var rect = {};
	var endl = ";\n";
	var color = " color 120 220 120 100 ";

	function adjust(target, xi, x, yi, y) {
		var msg = new Array();
		msg[0] = target + " width " + (x - xi)  + endl;
		msg[1] = target + " height " + (y - yi) + endl;
		return msg;
	}

	function interval(a, b) {
		var min = Math.round((a < b) ? a : b);
		var max = Math.round((a < b) ? b : a);
		return "[" + min + ", " + max + "[";
	}
	
	function graphicSegment(xi, x, yi, y) {
		return "(" + interval(xi, x) + " " + interval(yi, y) + ")";
	}

	function start(scene, absX, absY, x, y) {
		rect.target = "/ITL/" + scene + "/_rect";
		rect.ax = absX;
		rect.ay = absY;
		rect.rx = x;
		rect.ry = y;
		
		var msg = new Array();
		var i=0;
		msg[i++] = rect.target + " set rect 0. 0." + endl;
		msg[i++] = rect.target + " xorigin -1." + endl;
		msg[i++] = rect.target + " yorigin -1." + endl;
		msg[i++] = rect.target + " x " + rect.rx + endl;
		msg[i++] = rect.target + " y " + rect.ry + endl;
		msg[i++] = rect.target + color + endl;
		return msg;
	}

	function move(x, y) {
		return adjust (rect.target, rect.rx, x, rect.ry, y);
	}

	function stop(absX, absY, x, y) {
		var msg = adjust (rect.target, rect.rx, x, rect.ry, y);
		msg[msg.length+1] = "/ITL/log write '" + graphicSegment(rect.ax, absX, rect.ay, absY) + "'" + endl;
		return msg;
	}

?>

/ITL/log show 1;

/ITL/scene/* watch mouseDown 
	(/ITL/scene/javascript run "start('$scene', $absx, $absy, $sx, $sy)" );

/ITL/scene/* watch mouseMove 
	(/ITL/scene/javascript run "move($sx, $sy)" );

/ITL/scene/* watch mouseUp 
	(/ITL/scene/javascript run "stop($absx, $absy, $sx, $sy)" );

